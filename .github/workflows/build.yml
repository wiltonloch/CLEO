name: build

on: pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache YAXT
        id: cache_yaxt
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/yaxt/
          key: ${{ runner.os }}-yaxt-cache-v0.11.1
          restore-keys: |
            ${{ runner.os }}-yaxt-

      - name: Cache YAC
        id: cache_yac
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/yac/
          key: ${{ runner.os }}-yac-cache-v3.2.0
          restore-keys: |
            ${{ runner.os }}-yac-

      - name: Setup
        if: steps.cache_yaxt.outputs.cache-hit != 'true' || steps.cache_yac.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          cmake libnetcdff-dev liblapack-dev python3-dev \
          python3-numpy python3-mpi4py python3-pip curl \
          libfyaml-dev libopenmpi-dev openmpi-bin

      - name: Build YAXT
        if: steps.cache_yaxt.outputs.cache-hit != 'true'
        run: |
          curl -s -L https://swprojects.dkrz.de/redmine/attachments/download/534/yaxt-0.11.1.tar.gz | tar xvz
          cd yaxt-0.11.1
          ./configure --without-regard-for-quality --without-example-programs \
            --without-perf-programs --with-pic --prefix=${{ runner.temp }}/yaxt
          make -j 4
          make install

      - name: Build YAC
        if: steps.cache_yac.outputs.cache-hit != 'true'
        run: |
          curl -s -L https://gitlab.dkrz.de/dkrz-sw/yac/-/archive/v3.2.0/yac-v3.2.0.tar.gz | tar xvz
          cd yac-v3.2.0
          ./configure CFLAGS="-fPIC" CC=mpicc FC=mpif90 --disable-mpi-checks \
            --with-yaxt-root=${{ runner.temp }}/yaxt --prefix=${{ runner.temp }}/yac
          make -j 4
          make install

  build_basic_examples:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        target: [all, adia0d, golcolls, longcolls, lowlistcolls, szakallurbichcolls,
                testikstraubcolls, const2d, divfree2d, eurec4a1d, rshaft1d, spdtest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          cmake libopenmpi-dev openmpi-bin

      - name: Build Example
        run: |
          mkdir build
          cmake -S ./ -B ./build \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_CXX_COMPILER=mpic++ \
          -DCMAKE_CXX_FLAGS="-Werror -Wall -pedantic -O3" \
          -DKokkos_ENABLE_SERIAL=ON \
          -DENABLE_YAC_COUPLING=OFF

      - name: Compile Example
        run: cd build && make ${{ matrix.target }}

  build_yac_examples:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        target: [all, bubble3d, fromfile, fromfile_irreg]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          cmake libnetcdff-dev liblapack-dev python3-dev \
          python3-numpy python3-mpi4py python3-pip curl \
          libfyaml-dev libopenmpi-dev openmpi-bin

      - name: Restore YAXT Cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/yaxt/
          key: ${{ runner.os }}-yaxt-cache-v0.11.1

      - name: Restore YAC Cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/yac/
          key: ${{ runner.os }}-yac-cache-v3.2.0

      - name: Build YAC Example
        run: |
          mkdir build
          cmake -S ./ -B ./build \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_CXX_COMPILER=mpic++ \
          -DCMAKE_CXX_FLAGS="-Werror -Wall -pedantic -O3" \
          -DKokkos_ENABLE_SERIAL=ON \
          -DENABLE_YAC_COUPLING=ON \
          -DYAXT_ROOT=${{ runner.temp }}/yaxt \
          -DYAC_ROOT=${{ runner.temp }}/yac \
          -DCMAKE_MODULE_PATH=${PWD}/libs/coupldyn_yac/cmake

      - name: Compile YAC Example
        run: cd build && make ${{ matrix.target }}
